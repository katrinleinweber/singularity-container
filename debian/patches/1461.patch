From 73a74d671a81eeeaca8846ac79c3a27a37ec937a Mon Sep 17 00:00:00 2001
From: Jason Stover <jason.stover@gmail.com>
Date: Sun, 15 Apr 2018 21:22:22 -0500
Subject: [PATCH 1/2] Use PATH_MAX for filename size in struct

Also, do not use a hard coded /tmp. Use SINGULARITY_TMPDIR if set,
and fall back to /tmp if not.
---
 src/util/util.c | 15 +++++++++++++--
 src/util/util.h |  3 ++-
 2 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/src/util/util.c b/src/util/util.c
index ade49dea8..da0a0de09 100644
--- a/src/util/util.c
+++ b/src/util/util.c
@@ -379,6 +379,12 @@ void free_tempfile(struct tempfile *tf) {
 struct tempfile *make_tempfile(void) {
    int fd;
    struct tempfile *tf;
+   char *tmpdir = singularity_registry_get("TMPDIR");
+
+   printf("TMPDIR is: %s\n", tmpdir);
+   if (tmpdir == NULL) {
+       tmpdir = "/tmp";
+   }
 
    tf = malloc(sizeof(struct tempfile));
    if (tf == NULL) {
@@ -386,7 +392,7 @@ struct tempfile *make_tempfile(void) {
        ABORT(255);
    }
 
-   strncpy(tf->filename, "/tmp/vb.XXXXXXXXXX", sizeof(tf->filename) - 1);
+   snprintf(tf->filename, sizeof(tf->filename) - 1, "%s/vb.XXXXXXXXXX", tmpdir);
    tf->filename[sizeof(tf->filename) - 1] = '\0';
    if ((fd = mkstemp(tf->filename)) == -1 || (tf->fp = fdopen(fd, "w+")) == NULL) {
        if (fd != -1) {
@@ -405,6 +411,11 @@ struct tempfile *make_logfile(char *label) {
 
     char *daemon = singularity_registry_get("DAEMON_NAME");
     char *image = basename(singularity_registry_get("IMAGE"));
+    char *tmpdir = singularity_registry_get("TMPDIR");
+
+    if (tmpdir == NULL) {
+        tmpdir = "/tmp";
+    }
         
     tf = malloc(sizeof(struct tempfile));
     if (tf == NULL) {
@@ -412,7 +423,7 @@ struct tempfile *make_logfile(char *label) {
         ABORT(255);
     }    
 
-    if ( snprintf(tf->filename, sizeof(tf->filename) - 1, "/tmp/%s.%s.%s.XXXXXX", image, daemon, label) > sizeof(tf->filename) - 1 ) {
+    if ( snprintf(tf->filename, sizeof(tf->filename) - 1, "%s/%s.%s.%s.XXXXXX", tmpdir, image, daemon, label) > sizeof(tf->filename) - 1 ) {
         singularity_message(ERROR, "Label string too long\n");
         ABORT(255);
     }
diff --git a/src/util/util.h b/src/util/util.h
index 2540694ec..d269c0115 100644
--- a/src/util/util.h
+++ b/src/util/util.h
@@ -25,6 +25,7 @@
 #include <unistd.h>
 #include <stdlib.h>
 #include <stdio.h>
+#include <linux/limits.h>
 
 #include "util/message.h"
 
@@ -37,7 +38,7 @@
 struct tempfile {
     FILE *fp;
     int fd;
-    char filename[64];
+    char filename[PATH_MAX];
 };
 
 char *envar_get(char *name, char *allowed, int len);

From 37ec59a6998e8be8e0301376d0ff4c47edcca1e9 Mon Sep 17 00:00:00 2001
From: Jason Stover <jason.stover@gmail.com>
Date: Sun, 15 Apr 2018 21:34:31 -0500
Subject: [PATCH 2/2] Remove testing output that was missed

---
 src/util/util.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/src/util/util.c b/src/util/util.c
index da0a0de09..b3936c9c5 100644
--- a/src/util/util.c
+++ b/src/util/util.c
@@ -381,7 +381,6 @@ struct tempfile *make_tempfile(void) {
    struct tempfile *tf;
    char *tmpdir = singularity_registry_get("TMPDIR");
 
-   printf("TMPDIR is: %s\n", tmpdir);
    if (tmpdir == NULL) {
        tmpdir = "/tmp";
    }
